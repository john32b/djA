; -----------------------------------------------
; GUIDE for <ConfigFileB.hx>
; -----------------------------------------------
; - All keys are parsed as strings by default
; -----------------------------------------------
; Comment line
# Comment line

; -----------------------------------------------
; Declare sections like this:
; Access a single field of a section with  get("plain_vars_test","key1")
; Get the whole section fields in a Object (all fields as string) with getObj("plain_vars_test");
; 

[plain_vars_test]
; Valid, "key1"=>"value"
key1=value

; Valid, "key2"=>"value"
  key2  =   value

; Valid, "key3"=>"value"
key3 = 
   value

; Valid, "key4"=>"204.5" as string!!
key4 = 204.5


; -----------------------------------------------
; - You can have a section translate to an Object with properly typed fields with getObjEx('specialObj');
; - In order to do this the FLOAT/INT fields must start with the # symbol
; - e.g. getObjEx('specialObj') == { ticks:10 , time:54.5, glowing:true, type:"jumping" }
; -
[specialObj]
ticks = #10
time  = #54.5
glowing = true
type = jumping



[text_test]
; ---------------------------------------------------------
; Parsed as a single line
; Empty lines after the single line are ingored because the text is defined at a single line after the =
text1=A single line of text


; ---------------------------------------------------------
; Whitespace is ignored between the first line KEY = VALUE 
; this will get parsed normally as "text2:|Single line, No whitespace to the left or right|"
 text2  =      |Single line, No whitespace to the left or right|    
 
 
; ---------------------------------------------------------
; Every line after the = is ignored until it reaches some text,
; NOTE: Any lines after the text count towards empty lines, until EOF or another KEY-VALUE or STRING_TERMINATOR
text3=

   This is the first line of the text. Whitespace on the left is kept. Empty lines below until the next key

   
   
; ---------------------------------------------------------  
; To terminate a multiline text just put [\e] at the end, in a single line by itself
; All empty lines below [\e] are ignored. Otherwise they would be added to the text (like text3 example above)
; NOTE: Whitespace lines (spaces,tabs) are trimmed and processed as NewLines
text4=    No whitespace here
          this line has a whitespace to the left, not the right. Blank line after this line.
		  
\e



; ---------------------------------------------------------  
; You can put a [\] backslash symbol at the end of a line to merge the next line right next to it
; The next line will have the whitespace trimmed.

text5=    No initial whitespace here : \
          and this line is merged with the above line.
\e


; ---------------------------------------------------------
; You can put the [\l] symbol right after the = to process the initial newlines and add them to the text
; In this example 2 new lines are going to be added before the actual text.
; NOTE: that [\e] is always used in multilines to terminate the strings
text6= \l  


	Two lines of empty lines before this one. And one blank line after
	
\e


; WARNING !!! BUG?? NOTICE
text7= 

   In the current version (0.2) a multiline
   string like this will be terminated if you
   put a string with a : or \= `like : this`
   in the middle of the text, like I was trying to display the string
   Press Play then Any Key:{w:5,np}
   and it would justprocess that thing as a variable
   - Solution A : put {} at the start of the string
     works with FlxAutoText
   - Solution B : I need to fix it

;---------------------------------------------------------